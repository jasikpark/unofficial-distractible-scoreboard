---
import parser from "any-date-parser";
import styles from "@components/EpisodeCard.module.css";
import { Episode } from "@src/episodes.ts";
import Score from "@components/Score.astro";
import slug from "slug";

export interface Props {
  class: string;
  episode: Episode;
}

const {
  class: className,
  episode: { episodeNumber, title, description, publishDate, scores },
} = Astro.props as Props;

const parsedDate = parser.fromString(publishDate);
const sortedScores = scores.sort((a, b) => a.score < b.score);
const winner = sortedScores[0];
---

<article class={`${className} ${styles.EpisodeCard}`.trim()}>
  <div>
    <h1 class={styles.Title}>
      <a href={new URL(`/episodes/${slug(title)}`, Astro.site)}>{`Episode ${episodeNumber}: ${title}`}</a>
    </h1>
    {!parsedDate.invalid && <time class={styles.Time} datetime={parsedDate.toISOString()}>
        Uploaded {parsedDate.toDateString()}
      </time>}
  </div>
  <p>{description}</p>
  <ol class={styles.ScoresList}>
    <li>
      <Score score={winner}>
        Winner: {winner.character}
      </Score>
    </li>
    {sortedScores.map((score) => <li>
        <Score score={score} />
      </li>)}
  </ol>
</article>
