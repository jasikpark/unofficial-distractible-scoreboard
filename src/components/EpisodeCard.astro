---
import parser from "any-date-parser";
import styles from "@components/EpisodeCard.module.css";
import { Episode } from "@src/episodes.ts";
import Score from "@components/Score.astro";
import { sortScores } from "@src/utils.ts";
import slug from "slug";

export interface Props {
  class: string;
  episode: Episode;
}

const {
  class: className,
  episode: {
    episode_number: episodeNumber,
    title,
    description,
    release_date: publishDate,
    scores = [],
  },
} = Astro.props as Props;

const parsedDate = parser.fromString(publishDate);
const sortedScores = scores.sort(sortScores);

const winner = sortedScores[0];
---

<article class={`${className} ${styles.EpisodeCard}`.trim()}>
  <div class={styles.EpisodeCardContent}>
    <div>
      <h1 class={styles.Title}>
        <a href={new URL(`/episodes/${slug(title)}`, Astro.site)}
          >{`Episode ${episodeNumber}: ${title}`}</a
        >
      </h1>
      {!parsedDate.invalid && (
        <time class={styles.Time} datetime={parsedDate.toISOString()}>
          Uploaded {parsedDate.toDateString()}
        </time>
      )}
    </div>
    <p>{description}</p>
    {scores.length > 0 ? (
      <ol class={styles.ScoresList}>
        <li>
          <Score score={winner}>Winner: {winner.character}</Score>
        </li>
        {sortedScores.map((score) => (
          <li>
            <Score score={score} />
          </li>
        ))}
      </ol>
    ) : (
      ""
    )}
  </div>
</article>
