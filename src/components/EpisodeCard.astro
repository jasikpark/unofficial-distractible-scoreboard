---
import styles from "@components/EpisodeTag.module.css";
import parser from "any-date-parser";

export interface Score {
  character: "Mark" | "Bob" | "Wade";
  score: number;
}

export interface Episode {
  episodeNumber: number;
  title: string;
  description: string;
  publishDate: string | Date;
  scores: Score[];
}

import Score from "@components/Score.astro";

export interface Props {
  class: string;
  episode: Episode;
}

const {
  class: className,
  episode: { episodeNumber, title, description, publishDate, scores },
} = Astro.props as Props;
const parsedDate = parser.fromString(publishDate);
const sortedScores = scores.sort((a, b) => a.score < b.score);
const winner = sortedScores[0];
---

<article class={className}>
  <div>
    <h1>
      <a href={`${episodeNumber}`}>{`Episode ${episodeNumber}: ${title}`}</a>
    </h1>
    <time datetime={parsedDate.toISOString()}
      >Uploaded {parsedDate.toDateString()}</time>
  </div>
  <p>{description}</p>
  <ol>
    <li>
      <div class={styles[winner.character.toLowerCase()]}>
        Winner: {winner.character}
      </div>
    </li>
    {sortedScores.map((score) => <li>
        <Score score={score} />
      </li>)}
  </ol>
</article>

<style>
  article {
    background-color: var(--color-white);
    color: var(--color-black);
    width: min(70vw, 1000px);
    box-shadow: 16px 16px 0px 4px #000000;
    padding: 1.5rem;
    margin-block-start: 1rem;
    margin-block-end: 2rem;
    margin-inline-start: 1rem;
    margin-inline-end: 1rem;
    font-size: var(--font-size-5);
    line-height: var(--line-height-5);
  }
  article > * + * {
    padding-top: 1rem;
    padding-bottom: 0rem;
  }
  time {
    display: block;
    font-size: var(--font-size-3);
  }
  ol {
    display: flex;
    align-items: center;
    justify-content: space-between;
    list-style: none;
    gap: 1rem;
  }
  h1 {
    text-transform: uppercase;
    font-weight: 700;
  }
  h1 a {
    color: var(--color-black);
    text-decoration: underline;
  }
</style>
