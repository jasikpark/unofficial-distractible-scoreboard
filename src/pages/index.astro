---
import MainLayout from "@layouts/MainLayout.astro";
import SkipLink from "@components/SkipLink.astro";
import Intro from "@components/Intro.astro";
import AllTimeScoreboard from "@components/AllTimeScoreboard.astro";
import EpisodeCard from "@components/EpisodeCard.astro";

const episodes = Astro.fetchContent("../episodes/**.md").sort(
  (a, b) => a["episode_number"] - b["episode_number"]
);

const allTimeScores = episodes.reduce(
  (allTimeScores, episode) => {
    episode.scores.forEach((score) => {
      allTimeScores[
        allTimeScores.findIndex(
          (allTimeScore) => allTimeScore.character === score.character
        )
      ].score += typeof score.score === "number" ? score.score : 0;
    });
    return allTimeScores;
  },
  [
    { character: "Mark", score: 0 },
    { character: "Wade", score: 0 },
    { character: "Bob", score: 0 },
  ]
);
---

<MainLayout>
  <SkipLink href="#episodes" slot="skip-links">Skip to episodes list</SkipLink>
  <Intro />
  <AllTimeScoreboard scores={allTimeScores} />
  <ul id="episodes" class="episodes">
    {episodes.map((episode) => <li>
        <EpisodeCard class="episode" episode={episode} />
      </li>)}
  </ul>
</MainLayout>

<style>
  .episodes {
    padding-block: 2rem;
    max-width: min(100vw - 2rem, 1000px);
    margin-inline: auto;
  }
  .episodes > * + * {
    padding-top: 1rem;
  }
  @media (min-width: 700px) {
    .episodes li:nth-of-type(2n + 1) {
      transform: translateX(-1%);
    }
    .episodes li:nth-of-type(3n + 1) {
      transform: translateX(5%);
    }
    .episodes li:nth-of-type(4n + 1) {
      transform: translateX(-2%);
    }
    .episodes li:nth-of-type(5n + 1) {
      transform: translateX(9%);
    }
    .episodes li:nth-of-type(6n + 1) {
      transform: translateX(-11%);
    }
    .episodes li:nth-of-type(7n + 1) {
      transform: translateX(8%);
    }
    .episodes li:nth-of-type(8n + 1) {
      transform: translateX(-7%);
    }
  }
</style>
